"""Лабораторная работа №8"""

import random

# 1.	Веселая семейка: Напишите простую игру использующую рандом в языке python.
#		Правила игры (2 игрока), компьютер и вы. Начинает игру компьютер бросая вам
#		мяч, с вероятностью 70% вы его ловите, с вероятностью 30% нет. Если вы
#		поймали мяч то отчечаете на вопрос вы, если нет то компьютер придумывает
#		что-то. Далее вы бросаете мяч компьютеру, он ловит его с вероятностью 70%, и
#		отчечает на вопрос сам рандомно, если он не поймал мяч то вы отвечаете на
#		вопрос. Вопросы в игре и список возможных ответов вы придумываете
#		самостоятельно в игре должно быть не меньше 10 ходов. В конце выводиться
#		полученный результат (история), для компьютера и игрока. Должно получиться что
#		то смешное.
t1_questions = [
	'Ваше имя?',
	'Где вы живете?'
]
t1_answers = [
	['Александр', 'Сергей', 'Дмитрий', 'Елена', 'Андрей', 'Анастасия', 'Анна', 'Екатерина', 'Алексей', 'Максим', 'Иван', 'Наталья', 'Элена', 'Владимир', 'Евгений', 'Татьяна', 'Виктория', 'Ольга', 'Михаил', 'Ирина'],
	['На марсе', 'На планете Земля', 'В компьютере', 'В голове', 'В мыслях', 'Поблизости', 'Рядом с магазином', 'Под кроватью', 'В шкафу']
]
t1_answerPrefix = '\tОтвет: '

t1_history = []
def t1_log(text):
	t1_history.append(text)
	return text

t1_computerTurn = True
def t1_game():
	caught = random.random() > 0.3
	print(t1_log(f'\tБросок, {t1_computerTurn and 'вы' or 'компьютер'} {caught and '' or 'не '}поймал{t1_computerTurn and 'и' or ''} мяч.'))
	print(t1_log('\tВопрос: ' + random.choice(t1_questions)))

	answer = ''
	if caught and not t1_computerTurn:
		answer = input(t1_answerPrefix)
	else:
		answer = random.choice(random.choice(t1_answers))
		print(t1_answerPrefix + answer)
	t1_log(t1_answerPrefix + answer)

"""
for i in range(1, 11):
	print(t1_log('Ход ' + str(i)))
	t1_game()
	t1_computerTurn = not t1_computerTurn

for text in t1_history:
	print(text)
"""

# 2.	Встраивание функций: Напишите функцию reverse_number, которая принимает число в
#		качестве параметра и возвращает перевернутое число. Напишите функцию
#		is_palindrome, которая проверяет, является ли число палиндромом. Напишите функцию
#		process_numbers, которая принимает список чисел в качестве параметра,
#		переворачивает каждое число и выводит новый список с перевернутыми числами. Если
#		какое-то число является палиндромом, ваш код должен об этом сообщить.
def float_check(num):
	num = float(num)
	num2 = int(num)
	return num == num2 and num2 or num

def reverse_number(num):
	return float_check(str(float_check(num))[::-1])

def is_palindrome(num):
	return str(float_check(num)) == str(reverse_number(num))

def process_numbers(list):
	list2 = []

	palindrome = False
	for num in list:
		if is_palindrome(num):
			palindrome = True
		
		list2.append(reverse_number(num))
	
	return list2, palindrome

"""
print(reverse_number(41))
print(reverse_number(42.1))
print(is_palindrome(43))
print(is_palindrome(44))
print(is_palindrome(45.3))
print(process_numbers([53.3, 50.2, 55, 55.4]))
"""

# 3.	Сложный процент: Допустим, у вас есть некоторая сумма денег, которую вы хотите
#		инвестировать под определенный процент. Напишите программу, которая принимает на вход
#		начальную сумму, процентную ставку и количество лет, на которые вы планируете
#		инвестировать деньги. Программа должна рассчитать и вывести итоговую сумму по истечении
#		указанного количества лет с учетом сложного процента.



# 4.	Теория игр: Допустим, два игрока играют в игру, где каждый выбирает одну из трех дверей.
#		За одной из дверей находится приз, а за двумя другими - ничего. После того как оба
#		игрока сделали свой выбор, открывается одна из дверей, за которой нет приза. Затем
#		игрокам предлагается изменить свой выбор на другую дверь или остаться при своем
#		первоначальном выборе. Напишите программу, которая моделирует эту игру и определяет
#		вероятность выигрыша для игрока, который решает изменить свой выбор и для игрока, который
#		остается при своем первоначальном выборе. Двери должны генерироваться рандомно к примеру
#		[“приз”,“пусто”,“пусто”], [“пусто”,“приз”,“пусто”]. Вы должны написать функцию которая
#		принимает количество двирей и количество призов. Фунция должна вернуть, (список, словарь
#		или еще что-то на ваш выбор в зависимости от реализации), в котором будут имметировться
#		двери. Вы не чего не спрашиваете у человека запускающего код кроме количества дверей и призов.



# 5.	Реализуйте систему лутбоксов для игры, у вас должнобыть несколько списков с предметами:
#		обычные, редкие, эпические, легендарные. У каждого из типов есть свой шанс на дроп, для
#		обычных 0.7, для редких 0.2, для эпических (0.1), для легендарных (0.05). Также существует
#		система гаранта за 20 открытых лутбоксов, выпадает легендарный предмент. При запуске программы
#		должно происходить 20 автоматических открытий лутбокса, в результате программа должна написать
#		сколько выпало, обычных, редких, эпических и легендарных. Если эпических выпало больше 3 то вы
#		должны написать (Удача!), если легендарных больше 1, вы должны написать (Большая удача!), в
#		конце вы должны написать список полученных предметов, вы должны отобразить разным цветов разное
#		качество полученных предметов (белый - обычный, синий - редкий, фиолетовый - эпический,
#		оранжевый - легендарный).

