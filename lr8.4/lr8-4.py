"""Лабораторная работа №8.4"""

# 1.	Научите Анфису отвечать на вопрос «Анфиса, как дела?» случайным образом.
#		Напишите функцию how_are_you(), она должна вернуть случайный элемент из
#		списка answers. Добавьте в список свои варианты ответов: ничего не сломается,
#		а работать станет интереснее.
import random as rnd
answers = ['Норм.', 'Лучше всех :)', 'Ну так', 'Отличненько!', 'Ничего, жить буду']

def how_are_you():
	return answers[rnd.randint(0, len(answers) - 1)]

print(how_are_you())


# 2.	Научите Анфису сообщать пользователю, сколько времени шёл его любимый сериал.
#		Дата выхода первой серии - 17 апреля 2011 года. Дата выхода последней серии -
#		15 апреля 2019 года.
import datetime as dt

start_time = dt.datetime(2011, 4, 17)
final_time = dt.datetime(2019, 4, 15)
duration = final_time - start_time

print(duration)


# 3.	Напишите код, который рассчитает, сколько времени у вас ушло на вводный курс по
#		бэкенд-разработке. Вспомните, в какой день и во сколько вы начали проходить курс.
#		Запишите этот момент времени (полностью, с часами и минутами) в переменную start_moment.
#		В переменную current_moment запишите текущий момент времени. Затем вычислите разницу
#		двух этих моментов, запишите её в переменную total_time, и напечатайте её.
start_moment = dt.datetime(1970, 1, 1)
current_moment = dt.datetime.today()
total_time = current_moment - start_moment

print(total_time)


# 4.	Напишите функцию, которая по названию города скажет, сколько там сейчас времени. Мы
#		заготовили словарь UTC_OFFSET, где для каждого города записана его поправка к UTC в часах.
# 5.	В код добавлен словарь DATABASE, в нём хранятся данные о том, кто из друзей где живёт.
#		Напишите код функции what_time(), которая по имени друга скажет, сколько у него сейчас
#		времени. На вход функция должна получить имя друга, а вернуть — текущее время в его городе.
# 6.	Сделайте так, чтобы функция what_time() возвращала время в формате часы:минуты.
# 7.	Примените все полученные в этой теме знания, чтобы научить Анфису отвечать на вопросы про
#		друзей, сколько у них сейчас времени: Артём, который час? Антон, который час? Примеры таких
#		запросов уже добавлены в список queries в функции runner(). Измените функцию process_friend(),
#		чтобы она обрабатывала ещё один запрос, а именно query == 'который час?' Если город друга есть
#		в базе UTC_OFFSET, вызовите функцию what_time() и, подставив полученный результат, верните
#		ответ в формате Там сейчас 19:28. Если город отсутствует в базе UTC_OFFSET, то верните
#		сообщение об ошибке <не могу определить время в городе {название}>.
DATABASE = {
	'Серёга': 'Омск',
	'Соня': 'Москва',
	'Дима': 'Челябинск',
	'Алина': 'Красноярск',
	'Егор': 'Пермь',
	'Коля': 'Лондон'
}

UTC_OFFSET = {
	'Санкт-Петербург': 3,
	'Москва': 3,
	'Самара': 4,
	'Новосибирск': 7,
	'Екатеринбург': 5,
	'Нижний Новгород': 3,
	'Казань': 3,
	'Челябинск': 5,
	'Омск': 6,
	'Ростов-на-Дону': 3,
	'Уфа': 5,
	'Красноярск': 7,
	'Пермь': 5,
	'Воронеж': 3,
	'Волгоград': 3,
	'Краснодар': 3,
	'Калининград': 2
}

def what_time(friend):
	return (dt.datetime.now(dt.UTC) + dt.timedelta(hours = UTC_OFFSET[DATABASE[friend]])).time().strftime('%H:%M')

def format_friends_count(friends_count):
	if friends_count == 1:
		return '1 друг'
	elif 2 <= friends_count <= 4:
		return f'{friends_count} друга'
	else:
		return f'{friends_count} друзей'

def process_friend(name, query):
	if not name in DATABASE.keys():
		return f'У тебя нет друга по имени {name}'
	
	query = query.lower()
	if query == 'ты где?':
		return f'{name} в городе {DATABASE[name]}'
	elif query == 'который час?':
		city = DATABASE[name]
		if not city in UTC_OFFSET:
			return f'<не могу определить время в городе {city}>'
		
		return f'Там сейчас {what_time(name)}.'
	else:
		return '<неизвестный запрос>'

def process_anfisa(query):
	query = query.lower()
	if query == 'сколько у меня друзей?':
		return f'У тебя {format_friends_count(len(DATABASE))}.'
	elif query == 'кто все мои друзья?':
		return f'Твои друзья: {', '.join(DATABASE)}'
	elif query == 'где все мои друзья?':
		return f'Твои друзья в городах: {', '.join(set(DATABASE.values()))}'
	else:
		return '<неизвестный запрос>'

def process_query(query):
	arr = query.split(', ')
	name = arr[0]
	query = ' '.join(arr[1:])

	if name == 'Анфиса':
		return process_anfisa(query)
	else:
		return process_friend(name, query)


def runner():
    queries = [
        'Анфиса, сколько у меня друзей?',
        'Анфиса, кто все мои друзья?',
        'Анфиса, где все мои друзья?',
        'Анфиса, кто виноват?',
        'Серёга, ты где?',
        'Соня, что делать?',
        'Дима, ты где?',
        'Дима, который час?',
        'Коля, который час?',
        'Антон, который час?',
        'Петя, ты где?'
    ]
    for query in queries:
        print(query, '-', process_query(query))

runner()